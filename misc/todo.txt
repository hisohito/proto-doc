Ќужно прочитать (можно на русском):

1) http://en.wikipedia.org/wiki/Software_Prototyping

2) http://en.wikipedia.org/wiki/Prototyping

3) http://ru.wikipedia.org/wiki/Scrum

4) http://en.wikipedia.org/wiki/Agile_software_development

5) ѕрограммист-прагматик: 10, 11 главы

	http://www.rulit.net/books/programmist-pragmatik-put-ot-podmasterya-k-masteru-read-10120-17.html
	http://www.rulit.net/books/programmist-pragmatik-put-ot-podmasterya-k-masteru-read-10120-18.html
	http://www.rulit.net/books/programmist-pragmatik-put-ot-podmasterya-k-masteru-read-10120-19.html
	http://www.rulit.net/books/programmist-pragmatik-put-ot-podmasterya-k-masteru-read-10120-20.html
¬ажность построени€ модели. ћоделирование широко распространено во всех инженерных дисциплинах, в значительной степени из-за того, что оно реализует
принципы декомпозиции, абстракции и иерархии.  ажда€ модель описывает определенную часть рассматриваемой системы, а мы в свою очередь строим новые
модели на базе старых, в которых более или менее уверены. ћодели позвол€ют нам контролировать наши неудачи. ћы оцениваем поведение каждой модели в обычных и
необычных ситуаци€х, а затем проводим соответствующие доработки, если нас что-то не удовлетвор€ет.
»нженерный €зык программировани€ может ограничивать возможности пользовател€ писать неправильные программы. ” €зыка описани€ моделей другие задачи.
язык описани€ моделей должен позвол€ть пользователю написать любую программу, которую он захочет, поскольку в исходной системе могут быть произ ошибки. √лавное что дл€ любой программы написанной на €зыке описани€ моделей верификаци€ должна быть разрешена.
	